#!/usr/bin/env bash

## HASS-HELPER

# A menu driven shell script hacked together from internet samples and other shit.
# It works but it's still very new, in fact it's barely more than just an idea!

## ----------------------------------
# Step #1: Define variables
# ----------------------------------

EDITOR=ee
PASSWD=/etc/passwd
RED='\033[0;41;30m'
STD='\033[0;0;39m'

#  virtualenv_service:
#     Application installed in a virtualenv and
#     running as a service (using sysrc scripts)

# Directory containing virtualenvs 
SRV_DIR=/srv

# The application installed inside a virtualenv
#SRV_APP = [ homeassistant | hass-configurator | appdaemon ]

# _id=8123      # Set '_uid' and '_gid'
# _uid="${_id}" # user id
# _gid="${_id}" # group id

# _user=hass    # user name
# _group=hass   # group name

# ----------------------------------
# Step #2: User defined function
# ----------------------------------

load_colors() {
  red=$'\e[1;31m'
  grn=$'\e[1;32m'
  yel=$'\e[1;33m'
  bl1=$'\e[1;34m'
  mag=$'\e[1;35m'
  cyn=$'\e[1;36m'
  blu=$'\e[38;5;39m'
  orn=$'\e[38;5;208m'
  end=$'\e[0m'
}


pause(){
  echo
  read -p "Press ENTER to continue..." fackEnterKey
}


show_banner_0() {
  clear
  echo "${blu}"
  echo '           _  _   _   ___ ___     _  _ ___ _    ___ ___ ___  '
  echo '          | || | /_\ / __/ __|___| || | __| |  | _ \ __| _ \ '
  echo '          | __ |/ _ \\__ \__ \___| __ | _|| |__|  _/ _||   / '
  echo '          |_||_/_/ \_\___/___/   |_||_|___|____|_| |___|_|_\ '
  echo "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
  echo "                   A SIMPLE MENU FOR COMMON COMMANDS                   "
  echo "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
  echo -e "${end}\n"
}

show_banner_1() {
  clear
  echo "${blu}"
  echo '   _  _  ___  __  __ ___   _   ___ ___ ___ ___ _____ _   _  _ _____  '
  echo '  | || |/ _ \|  \/  | __| /_\ / __/ __|_ _/ __|_   _/_\ | \| |_   _| '
  echo '  | __ | (_) | |\/| | _| / _ \\__ \__ \| |\__ \ | |/ _ \| .` | | |   '
  echo '  |_||_|\___/|_|  |_|___/_/ \_\___/___/___|___/ |_/_/ \_\_|\_| |_|   '
  echo '~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~'
  echo "                  MANAGE THE HOME ASSISTANT SERVICE                     "
  echo '~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~'
  echo -e "${end}"
}

show_banner_2() {
  clear
  echo "${blu}"
  echo '        ___ ___  _  _ ___ ___ ___ _   _ ___    _ _____ ___  ___  '
  echo '       / __/ _ \| \| | __|_ _/ __| | | | _ \  /_\_   _/ _ \| _ \ '
  echo '      | (_| (_) | .` | _| | | (_ | |_| |   / / _ \| || (_) |   / '
  echo '       \___\___/|_|\_|_| |___\___|\___/|_|_\/_/ \_\_| \___/|_|_\ '
  echo '~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~'
  echo "                 MANAGE THE HASS CONFIGURATOR SERVICE                  "
  echo '~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~'
  echo -e "${end}"
}

show_banner_3() {
  clear
  echo "${blu}"
  echo '              _   ___ ___ ___   _   ___ __  __  ___  _  _  '
  echo '             /_\ | _ \ _ \   \ /_\ | __|  \/  |/ _ \| \| | '
  echo '            / _ \|  _/  _/ |) / _ \| _|| |\/| | (_) | .` | '
  echo '           /_/ \_\_| |_| |___/_/ \_\___|_|  |_|\___/|_|\_| '
  echo '~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~'
  echo "                     MANAGE THE APPDAEMON SERVICE                      "
  echo '~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~'
  echo -e "${end}"
}


service_menu() {

  local _default_actions
  local _extra_actions
  local _action
  
  # Default actions that all services (in this jail) should have
  _default_actions="status restart upgrade start stop test"
  
  # Home Assistant an extra check config option
  [[ "${1}" == "homeassistant" ]] && _extra_actions="check_config"
  
  PS3=""$'\n'"${blu}Select: ${end}"
  echo
  select _action in "Main Menu" ${_default_actions} ${_extra_actions}; do
    case "${_action}" in
      "Main Menu")
        m_true="N"
        break
        ;;
      *)
        service "${1}" "${_action}"
        pause
        break
        ;;
    esac
  done
}

show_menu_0() {
# clear --> moved to show_banner
  echo " 1) Home Assistant"
  echo " 2) Hass Configurator"
  echo " 3) AppDaemon"
  echo
  echo " 0) EXIT"
  #echo " 4) Miscellaneous"
  echo
}


read_options(){
  local choice
  echo "${blu}"
  read -p "Select: " choice
  echo "${end}"
  case "${choice}" in
    [eE]|[eE][xX][iI][tT]|[qQ]|[cC]|[cC]|[oN][sS][oO][lL][eE]|"0")
      clear; exit 0
      ;;
    "1") # Home Assistant
      m_true="Y"
      while [ ${m_true} == "Y" ]; do
        show_banner_1
        service_menu homeassistant
      done
      ;;
    "2") # Hass Configurator
      m_true="Y"
      while [ ${m_true} == "Y" ]; do
        show_banner_2
        service_menu configurator
      done
      ;;
    "3") # AppDaemon
      m_true="Y"
      while [ ${m_true} == "Y" ]; do
        show_banner_3
        service_menu appdaemon
      done
      ;;
    *) echo -e "${red}Invalid..${end}" && sleep 1
  esac
}

set_false() {
  log_watch="N"
}

show_colors() {
# Test function to see how colors look
  echo "${red}! ALERT !"
  echo "${orn}Warning "
  echo "${yel}Caution "
  echo "${end}"
  pause
}


# ----------------------------------------------
# Step #3: Trap CTRL+C, CTRL+Z and quit singles
# ----------------------------------------------
# Included from original example
#trap '' SIGINT SIGQUIT SIGTSTP

## TODO Expand using this example instead
##      to call a function when signal is caught.

# Define and use traps to clean up all temp files
   # Trap on:  Use 'kill -l' to list all
   # 1 = SIGHUP (Hangup of controlling terminal or death of parent)
   # 2 = SIGINT (Interrupted by the keyboard)
   # 3 = SIGQUIT (Quit signal from keyboard)
   # 6 = SIGABRT (Aborted by abort(3))
   # 9 = SIGKILL (Sent a kill command)

   # Create Trap for ^\ & Others: Call Funtion CleanExit
#   trap CleanExit 1 3 6 9
   trap set_false 2


# -----------------------------------
# Step #4: Main logic - infinite loop
# ------------------------------------

load_colors # Only need to load colors once

while true; do
  show_banner_0 && show_menu_0 && read_options
done
